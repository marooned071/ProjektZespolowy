
<form id = "newForm1" action="newQuestion" method="post">{% csrf_token %}
	<input type="text" name="nazwa" />
	<!-- <ul id="choiceList"></ul> -->

	<input type="submit" value="Dodaj Pytanie" />
	
</form>



package com.example.qrpoll;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.widget.Toast;



public class MyHttpURLConnection {
	
	String mainResult = "";
	
	public String get(String url) throws Exception404 {
		new HttpAsyncTask().execute(url);
		
		
		
		return mainResult;
		
	}
	
    public static String getResult(String url) throws Exception404{
        InputStream inputStream = null;
        String result = "";
        HttpResponse httpResponse = null;
        try{
           // create HttpClient
            HttpClient httpclient = new DefaultHttpClient();
 
            // make GET request to the given URL
            httpResponse = httpclient.execute(new HttpGet(url));
 
            // receive response as inputStream
            inputStream = httpResponse.getEntity().getContent();

            // convert inputstream to string
            if(inputStream != null)
                result = convertInputStreamToString(inputStream);
            else
                result = "Did not work!";
        }
        catch(Exception e){
        	e.printStackTrace();
        }
        int code = httpResponse.getStatusLine().getStatusCode();
        if(code==404) throw new Exception404(); //jesli kod odpowiedzi jest 404, wyrzuc Exception404 (taka strona nie istanieje)
 
 
        return result;
    }
    

 
    private static String convertInputStreamToString(InputStream inputStream) throws IOException{
        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
        String line = "";
        String result = "";
        while((line = bufferedReader.readLine()) != null)
            result += line;
 
        inputStream.close();
        return result;
 
    }
    
    private class HttpAsyncTask extends AsyncTask<String, Void, String> {
        @Override
        protected String doInBackground(String... urls) {
        	String s = null;
			try {
				s= MyHttpURLConnection.getResult(urls[0]);
			} catch (Exception404 e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

            return s;
        }
        
        // onPostExecute displays the results of the AsyncTask.
        @Override
        protected void onPostExecute(String result) {
        	
//            Toast.makeText(getBaseContext(), "Received!", Toast.LENGTH_LONG).show();
//            getResponse.setText(result);
        	mainResult = result;
       }
        // onPostExecute displays the results of the AsyncTask.
    }
 

	
//	static public String get(String url) {
//		HttpAsyncTask hat = new HttpAsyncTask();
//		
//		return hat.execute(url);
//	}
//	
//	private class HttpAsyncTask extends AsyncTask<String, Void, String> {
//        @Override
//        protected String doInBackground(String... urls) {
//        	String resString = null;
//        	
//        	try{
//        		HttpClient httpclient = new DefaultHttpClient(); // Create HTTP Client
//        		HttpGet httpget = new HttpGet(urls[0]); // Set the action you want to do
//        		HttpResponse response = httpclient.execute(httpget); // Executeit
//        		HttpEntity entity = response.getEntity(); 
//        		
//        		int code = response.getStatusLine().getStatusCode();
//        		if(code==404) throw new Exception404(); //jesli kod odpowiedzi jest 404, wyrzuc Exception404 (taka strona nie istanieje)
//        	
//        		InputStream is = entity.getContent(); // Create an InputStream with the response
//        		BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"), 8);
//        		StringBuilder sb = new StringBuilder();
//        		String line = null;
//        		while ((line = reader.readLine()) != null) // Read line by line
//        		    sb.append(line + "\n");
//        		
//        		is.close(); // Close the stream
//        		resString = sb.toString(); // Result is here
//        		
//        	}catch(Exception e){
//        		return null;
//        	}
//    		
//    		return resString;	
//        	
//        }
//
//    }
	
}

