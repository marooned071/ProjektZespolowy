package com.example.qrpoll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONException;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RatingBar;
import android.widget.RatingBar.OnRatingBarChangeListener;
import android.widget.TextView;
import android.widget.Toast;
import android.os.Build;

public class PollActivity extends ActionBarActivity {
	ExpandableListAdapter listAdapter;
    ExpandableListView expListView;
    List<String> listDataHeader;
    HashMap<String, List<String>> listDataChild;
    
    private TextView tv1;
    private TextView tv2;
    private TextView tv3;
    private TextView tv4;
    
    private RatingBar rb;
    
    private void prepareListData() {
        listDataHeader = new ArrayList<String>();
        listDataChild = new HashMap<String, List<String>>();
 
        // Adding child data
        listDataHeader.add("Top 250");
        listDataHeader.add("Now Showing");
        listDataHeader.add("Coming Soon..");
 
        // Adding child data
        List<String> top250 = new ArrayList<String>();
        top250.add("The Shawshank Redemption");
    
        List<String> nowShowing = new ArrayList<String>();
        nowShowing.add("xD");
        List<String> comingSoon = new ArrayList<String>();
       
        listDataChild.put(listDataHeader.get(0), top250); // Header, Child data
        listDataChild.put(listDataHeader.get(1), nowShowing);
        //listDataChild.put(listDataHeader.get(2), comingSoon);
    }
    
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        //start historii
        if (id == R.id.action_settings) {
        	Intent it=new Intent(getApplication(),HistoryLayout.class);
			startActivity(it);
        	
        	return true;
        }
        return super.onOptionsItemSelected(item);
    }

    
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
		setContentView(R.layout.activity_poll);
		expListView = (ExpandableListView) findViewById(R.id.lvExp);
		tv1=(TextView)findViewById(R.id.textView1);
		tv2=(TextView)findViewById(R.id.textView2);
		tv3=(TextView)findViewById(R.id.textView3);
		tv4=(TextView)findViewById(R.id.textView4);
		
		rb=(RatingBar)findViewById(R.id.ratingBar1);
		rb.setOnRatingBarChangeListener(new OnRatingBarChangeListener() {
			public void onRatingChanged(RatingBar ratingBar, float rating,
					boolean fromUser) {
		 
				Toast.makeText(getApplicationContext(),
				        rating+"", Toast.LENGTH_SHORT).show();
		 
				}
		});
		
		prepareListData();
		Intent intent = getIntent();
	    String url = intent.getStringExtra("scanResult");
	    url = "http://"+url;
		
		createPollView(url);
		
		 listAdapter=new ExpandableListAdapter(this,listDataHeader,listDataChild,poll);
        expListView.setAdapter(listAdapter);
		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		
		
	
	    
		
	}
	
	private Map<Integer,RadioGroup> rgMap; // mapa grup z radiobuttonami, czyli grup odpowiedzi, <ID, grupa>
	private Poll poll = null;
	
	/**
	 * Tworzy dynamiczny widok ankiet z mozliwoscia glosowania.
	 * @param url - adres do ankiety np: http://loony-waters-2513.herokuapp.com/qrpolls/meeting/b9ffd9db1af0b14ed74e92e8d3273f3e/
	 */
	public void createPollView(String url){
		try {
			poll = new Poll(url);
		} catch (JSONException e) {
			Toast.makeText(getApplicationContext(),
			        "Blad ankiety", Toast.LENGTH_SHORT).show();
			e.printStackTrace();
			return;
		}
		
		
		tv1.setText(poll.getSubject());
		tv2.setText(poll.getHash_id());
		tv3.setText(poll.getStart_date());
		tv4.setText(poll.getRoom());
		}
	
	
	public void onBackPressed() {
		//do nothing
	}


	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_poll, container,
					false);
			return rootView;
		}
	}

}
