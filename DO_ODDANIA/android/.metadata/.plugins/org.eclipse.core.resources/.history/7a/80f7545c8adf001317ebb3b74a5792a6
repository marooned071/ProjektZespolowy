package com.example.qrpoll;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONException;

import com.example.qrpoll.PollActivity.VoteButtonsListener;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.LinearLayout.LayoutParams;
import android.os.Build;

public class LayoutActivity extends Activity {
	private TextView tv1;
	private TextView tv2;
	private TextView tv3;
	private TextView tv4;
	
	private VoteButtonsListener voteButtonsListener; //listener przyciskow do glosowania
	private Map<Integer,RadioGroup> rgMap; // mapa grup z radiobuttonami, czyli grup odpowiedzi, <ID, grupa>
	private Poll poll = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		tv1=(TextView)findViewById(R.id.textView1);
		tv2=(TextView)findViewById(R.id.textView2);
		tv3=(TextView)findViewById(R.id.textView3);
		tv4=(TextView)findViewById(R.id.textView4);
		Intent intent = getIntent();
	    String url = intent.getStringExtra("scanResult");
	    url = "http://"+url;
	    
	    
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_layout);
		 getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
		            WindowManager.LayoutParams.FLAG_FULLSCREEN);
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.layout, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	private class VoteButtonsListener implements OnClickListener{

		@Override
		public void onClick(View arg0) {
			int buttonID = arg0.getId();
			RadioGroup rg= rgMap.get(buttonID);
			int checkedChoiceID = rg.getCheckedRadioButtonId();
			if(checkedChoiceID!=-1){
				poll.vote(checkedChoiceID+"");
				showToast("Zaglosowano!");
			}
			else{
				showToast("Nic nie zaznaczono");
			}
			
			
			
		}
		
	}
	public void showToast(String msg){
	    Toast toast = Toast.makeText(getApplicationContext(),
		        msg, Toast.LENGTH_SHORT);
		    toast.show();
	}
	
	
	public void createPollView(String url){
		try {
			poll = new Poll(url);
		} catch (JSONException e) {
			showToast("Blad ankiety.");
			e.printStackTrace();
			return;
		}
		
		
        final LinearLayout questionLinear = (LinearLayout) findViewById(R.id.poll_questionsLinear); //panel w ktorym beda pytania (jest zdefiniowany w pliku xml layoutu)
        LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
		
		Map<String,Question> questionMap = poll.getQuestion_map();
			
		Question q;
		
		rgMap = new HashMap<Integer,RadioGroup>();
		
		for(String key: questionMap.keySet()){
			q = questionMap.get(key);
			
			LinearLayout ll = new LinearLayout(this); //panel na pytanie o kluczu key
            ll.setOrientation(LinearLayout.VERTICAL);
            
            
            TextView questionTextView = new TextView(this); //textView z pytaniem
            questionTextView.setTextSize(20.0f);
            questionTextView.setText(q.getQuestion_text()); 
            ll.addView(questionTextView);
            
            int buttonId = Integer.parseInt(q.getPk()); // id przycisku odpowiada id z bazy danych
            RadioGroup rg = new RadioGroup(this);
           // rg.setId(buttonId);
            
            rgMap.put(buttonId, rg);
            
            Map<String, Choice> choiceMap= q.getChoice_map();
            
            for(String choice: choiceMap.keySet()){
            	Choice c = choiceMap.get(choice);
            	RadioButton rb = new RadioButton(this);
            	int rbID = Integer.parseInt(c.getPk());
            	rb.setId(rbID);							//ID radiobutton odpowiada id odpowiedzi z bazy danych
            	rb.setText(c.getChoice_text());
            	rg.addView(rb);
            }
            
            ll.addView(rg);
            
            Button btn = new Button(this);
            //int buttonId = Integer.parseInt(q.getPk()); // id przycisku odpowiada id z bazy danych
            btn.setId(buttonId);
            btn.setText("VOTE");
            btn.setLayoutParams(params);
            btn.setOnClickListener(voteButtonsListener);
            
            ll.addView(btn);
  
            questionLinear.addView(ll);  
            
		}
		
		
		
		
		
	}
	
	
	
	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_layout,
					container, false);
			return rootView;
		}
	}

}
